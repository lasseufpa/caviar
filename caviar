#! /usr/bin/env python3

import argparse
from subprocess import Popen, DEVNULL

from kernel import core

parser = argparse.ArgumentParser(description="Caviar Simulator")
parser.add_argument(
    "--enable-monitor",
    help="Enable metrics monitoring",
    action="store_true",
)

if __name__ == "__main__":
    args = parser.parse_args()
    enable_monitor = False
    if args.enable_monitor:
        enable_monitor = True
        # Docker-compose up
        try:
            process = Popen(
                ["docker-compose", "-f", "compose.yml", "up", "-d"],
                stdout=DEVNULL,
                stderr=DEVNULL,
            )
            stdout, stderr = process.communicate()
            if process.returncode == 0:
                pass
            else:
                raise Exception(
                    f"Docker Compose failed with return code {process.returncode}"
                )
        except FileNotFoundError:
            raise FileNotFoundError(
                "Docker Compose not found. Please ensure Docker is installed and the docker-compose command is available."
            )
        except Exception as e:
            raise Exception(f"An error occurred while starting Docker Compose: {e}")
    core(enable_monitor).initialize()
    

